Index: jsc.cpp
===================================================================
--- jsc.cpp	(revision 88311)
+++ jsc.cpp	(working copy)
@@ -483,6 +483,7 @@
 static void parseArguments(int argc, char** argv, Options& options, JSGlobalData* globalData)
 {
     int i = 1;
+		bool addedScriptToRun = false;
     for (; i < argc; ++i) {
         const char* arg = argv[i];
         if (!strcmp(arg, "-f")) {
@@ -514,20 +515,44 @@
 #endif
             continue;
         }
+				/*
         if (!strcmp(arg, "--")) {
             ++i;
             break;
         }
+				*/
         if (!strcmp(arg, "-h") || !strcmp(arg, "--help"))
             printUsageStatement(globalData, true);
-        options.scripts.append(Script(true, argv[i]));
+
+				if(addedScriptToRun){
+					options.arguments.append(argv[i]);
+					//printf("adding %s to options.arguments\n",argv[i]);
+				}else{
+					options.scripts.append(Script(true, argv[i]));
+					//printf("appending %s to options.scripts\n",argv[i]);
+					
+					addedScriptToRun = true;
+				}
     }
 
     if (options.scripts.isEmpty())
         options.interactive = true;
 
+		/*
     for (; i < argc; ++i)
         options.arguments.append(argv[i]);
+		*/
+
+
+		/*
+		char* lastArgDeclaration = (char*)calloc(40,sizeof(char));
+		strcat(lastArgDeclaration,"lastArg = '");
+		strcat(lastArgDeclaration,argv[argc-1]);
+		strcat(lastArgDeclaration,"'");
+		printf("%s\n",lastArgDeclaration);
+ 
+    options.scripts.append(Script(false, lastArgDeclaration));
+		*/
 }
 
 int jscmain(int argc, char** argv, JSGlobalData* globalData)
